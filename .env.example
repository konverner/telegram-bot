# =============================================================================
# PROJECT CONFIGURATION
# =============================================================================
PROJECT_NAME="Telegram Bot"
PROJECT_VERSION="0.1.0"
ENVIRONMENT=local  # local, staging, or production

# =============================================================================
# TELEGRAM BOT CONFIGURATION
# =============================================================================
# Required: Get this token from @BotFather on Telegram
# Format: 123456789:ABCdefGHIjklMNOpqrsTUVwxyz
BOT_TOKEN=

# Required: Telegram username and user ID of the bot administrator
# You can get your user ID by messaging @userinfobot
SUPERUSER_USERNAME=your_telegram_username
SUPERUSER_USER_ID=123456789

# Bot communication strategy
COMMUNICATION_STRATEGY=polling  # Options: polling, webhook

# =============================================================================
# WEBHOOK CONFIGURATION (Only required if COMMUNICATION_STRATEGY=webhook)
# =============================================================================
# Option 1: Use a webhook URL (e.g., from ngrok, Railway, Heroku)
WEBHOOK_URL=

# Option 2: Use self-hosted webhook with SSL certificates
HOST=0.0.0.0  # Public IP address or domain name
PORT=443  # Must be 443, 80, or 8443 for Telegram webhooks
WEBHOOK_SSL_CERT=./webhook_cert.pem  # Path to SSL certificate file
WEBHOOK_SSL_PRIVKEY=./webhook_pkey.pem  # Path to SSL private key file

# =============================================================================
# GOOGLE SHEETS API CONFIGURATION
# =============================================================================
# Required: Google Cloud Service Account credentials
# Download JSON credentials from Google Cloud Console and extract these values:

# Service account type (always "service_account")
TYPE=service_account

# Google Cloud Project ID
PROJECT_ID=your-project-id

# Service account private key ID (from JSON file)
PRIVATE_KEY_ID=your-private-key-id

# Service account private key (from JSON file)
# Important: Keep the quotes and line breaks exactly as they appear in the JSON file
PRIVATE_KEY="-----BEGIN PRIVATE KEY-----
[Your private key content here]
-----END PRIVATE KEY-----"

# Service account email (from JSON file)
CLIENT_EMAIL=your-service-account@your-project-id.iam.gserviceaccount.com

# Client ID (from JSON file)
CLIENT_ID=123456789012345678901

# Client certificate URL (from JSON file)
CLIENT_X509_CERT_URL=https://www.googleapis.com/robot/v1/metadata/x509/your-service-account%40your-project-id.iam.gserviceaccount.com

# Standard Google OAuth2 endpoints (usually don't need to change)
AUTH_URI=https://accounts.google.com/o/oauth2/auth
TOKEN_URI=https://oauth2.googleapis.com/token
AUTH_PROVIDER_X509_CERT_URL=https://www.googleapis.com/oauth2/v1/certs
UNIVERSE_DOMAIN=googleapis.com

# =============================================================================
# DATABASE CONFIGURATION (Optional - uses SQLite by default)
# =============================================================================
# If not provided, the bot will use SQLite database (local_database.db)
# For production, configure PostgreSQL:
DB_HOST=localhost
DB_PORT=5432
DB_USER=budget_bot
DB_PASSWORD=your_secure_password
DB_NAME=budget_bot_db

# =============================================================================
# SECURITY & PERFORMANCE CONFIGURATION
# =============================================================================
# Antiflood protection (prevents spam)
ANTIFLOOD_ENABLED=true
ANTIFLOOD_RATE_LIMIT=1  # Messages per second per user

# Secret key for session security (generate a random string)
SECRET_KEY=your-secret-key-here

# =============================================================================
# OPTIONAL FEATURES
# =============================================================================
# Plugin system (experimental)
USE_PLUGINS=false

# AI Integration (optional)
FIREWORKS_API_KEY=
OPENAI_API_KEY=
